<launch>

<!-- these are the arguments you can pass this launch file, for example paused:=true -->
<arg name="paused" default="false"/>
<arg name="use_sim_time" default="true"/>
<arg name="gui" default="true"/>
<arg name="headless" default="false"/>
<arg name="debug" default="false"/>
<arg name="model" default="$(find robot_arm)/urdf/05-robot_arm_teleop.urdf.xacro"/>

<!-- We resume the logic in empty_world.launch -->

<include file="$(find gazebo_ros)/launch/empty_world.launch">
<arg name="debug" value="$(arg debug)" />
<arg name="gui" value="$(arg gui)" />
<arg name="paused" value="$(arg paused)"/>
<arg name="use_sim_time" value="$(arg use_sim_time)"/>
<arg name="headless" value="$(arg headless)"/>
</include>

<!-- Load the URDF into the ROS Parameter Server -->

<param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->

<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  args="-urdf -model Robot_Arm -param robot_description"/>

<node name="joint_state_publisher" pkg="joint_state_publisher"
type="joint_state_publisher" ></node>

<!-- start robot state publisher -->
<node pkg="robot_state_publisher" type="robot_state_publisher"
name="robot_state_publisher" output="screen" >
<param name="publish_frequency" type="double" value="50.0" />
</node>

 <node name="robot_arm_controller" pkg="controller_manager" type="spawner" output="screen"  args="joint_state_controller joint1_velocity_controller joint2_velocity_controller joint4_velocity_controller joint3_velocity_controller">
  </node>

<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
  <param name="default_topic" value="Robot_arm_diffdrive_controller/cmd_vel"/> 
</node>

 
</launch>
